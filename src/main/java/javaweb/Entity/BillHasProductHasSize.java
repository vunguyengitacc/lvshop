package javaweb.Entity;
// Generated Jul 1, 2021, 2:48:58 PM by Hibernate Tools 5.1.10.Final

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * BillHasProductHasSize generated by hbm2java
 */
@Entity
@Table(name = "bill_has_product_has_size", catalog = "phonedata")
public class BillHasProductHasSize implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private BillHasProductHasSizeId id;
	private Bill bill;
	private ProductHasSize productHasSize;
	private Integer amount;

	public BillHasProductHasSize() {
	}

	public BillHasProductHasSize(BillHasProductHasSizeId id, Bill bill, ProductHasSize productHasSize) {
		this.id = id;
		this.bill = bill;
		this.productHasSize = productHasSize;
	}

	public BillHasProductHasSize(BillHasProductHasSizeId id, Bill bill, ProductHasSize productHasSize, Integer amount) {
		this.id = id;
		this.bill = bill;
		this.productHasSize = productHasSize;
		this.amount = amount;
	}

	@EmbeddedId

	@AttributeOverrides({ @AttributeOverride(name = "billId", column = @Column(name = "BILL_ID", nullable = false)),
			@AttributeOverride(name = "productHasSizeProductId", column = @Column(name = "PRODUCT_has_SIZE_PRODUCT_ID", nullable = false)),
			@AttributeOverride(name = "productHasSizeSizeId", column = @Column(name = "PRODUCT_has_SIZE_SIZE_ID", nullable = false)) })
	public BillHasProductHasSizeId getId() {
		return this.id;
	}

	public void setId(BillHasProductHasSizeId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "BILL_ID", nullable = false, insertable = false, updatable = false)
	public Bill getBill() {
		return this.bill;
	}

	public void setBill(Bill bill) {
		this.bill = bill;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "PRODUCT_has_SIZE_PRODUCT_ID", referencedColumnName = "PRODUCT_ID", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "PRODUCT_has_SIZE_SIZE_ID", referencedColumnName = "SIZE_ID", nullable = false, insertable = false, updatable = false) })
	public ProductHasSize getProductHasSize() {
		return this.productHasSize;
	}

	public void setProductHasSize(ProductHasSize productHasSize) {
		this.productHasSize = productHasSize;
	}

	@Column(name = "AMOUNT")
	public Integer getAmount() {
		return this.amount;
	}

	public void setAmount(Integer amount) {
		this.amount = amount;
	}

}
