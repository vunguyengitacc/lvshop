package javaweb.Entity;
// Generated Jul 1, 2021, 2:48:58 PM by Hibernate Tools 5.1.10.Final

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

/**
 * Product generated by hbm2java
 */
@Entity
@Table(name = "product", catalog = "phonedata")
public class Product implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer id;
	private Trademark trademark;
	private String name;
	private BigDecimal originalPrice;
	private BigDecimal price;
	private BigDecimal promotionPrice;
	private String image;
	private String description;
	private Date createdDate;
	private Set<Comment> comments = new HashSet<Comment>(0);
	private Set<ProductHasSize> productHasSizes = new HashSet<ProductHasSize>(0);
	private int soldQuantity = 0;

	public Product() {
		this.createdDate = new Date();
	}

	public Product(Trademark trademark, String name, BigDecimal originalPrice, BigDecimal price,
			BigDecimal promotionPrice, Date createdDate) {
		this.trademark = trademark;
		this.name = name;
		this.originalPrice = originalPrice;
		this.price = price;
		this.promotionPrice = promotionPrice;
		this.createdDate = createdDate;
	}

	public Product(Trademark trademark, String name, BigDecimal originalPrice, BigDecimal price,
			BigDecimal promotionPrice, String image, String description, Date createdDate, Set<Comment> comments,
			Set<ProductHasSize> productHasSizes) {
		this.trademark = trademark;
		this.name = name;
		this.originalPrice = originalPrice;
		this.price = price;
		this.promotionPrice = promotionPrice;
		this.image = image;
		this.description = description;
		this.createdDate = createdDate;
		this.comments = comments;
		this.productHasSizes = productHasSizes;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "ID", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TRADEMARK_ID", nullable = false)
	public Trademark getTrademark() {
		return this.trademark;
	}

	public void setTrademark(Trademark trademark) {
		this.trademark = trademark;
	}

	@Column(name = "NAME", nullable = false, length = 100)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "ORIGINAL_PRICE", nullable = false, precision = 20)
	public BigDecimal getOriginalPrice() {
		return this.originalPrice;
	}

	public void setOriginalPrice(BigDecimal originalPrice) {
		this.originalPrice = originalPrice;
	}

	@Column(name = "PRICE", nullable = false, precision = 20)
	public BigDecimal getPrice() {
		return this.price;
	}

	public void setPrice(BigDecimal price) {
		this.price = price;
	}

	@Column(name = "PROMOTION_PRICE", nullable = false, precision = 20)
	public BigDecimal getPromotionPrice() {
		return this.promotionPrice;
	}

	public void setPromotionPrice(BigDecimal promotionPrice) {
		this.promotionPrice = promotionPrice;
	}

	@Column(name = "IMAGE", length = 500)
	public String getImage() {
		return this.image;
	}

	public void setImage(String image) {
		this.image = image;
	}

	@Column(name = "DESCRIPTION", length = 1000)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATED_DATE", nullable = false, length = 19)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<Comment> getComments() {
		return this.comments;
	}

	public void setComments(Set<Comment> comments) {
		this.comments = comments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<ProductHasSize> getProductHasSizes() {
		return this.productHasSizes;
	}

	public void setProductHasSizes(Set<ProductHasSize> productHasSizes) {
		this.productHasSizes = productHasSizes;
	}
	

	@Transient
	public int getSoldQuantity() {
		return soldQuantity;
	}

	public void setSoldQuantity(int soldQuantity) {
		this.soldQuantity = soldQuantity;
	}

	public void loadSoldQuantity() {
		this.soldQuantity = this.getProductHasSizes().parallelStream()
				.map((item) -> item.getBillHasProductHasSizes().size()).reduce(0, Integer::sum);
	}


}
